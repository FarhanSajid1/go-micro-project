package main

import (
	"context"
	"log"
	"time"

	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
	"gopkg.in/mgo.v2"
)

// Responsible for setting up database connection
var collect *mongo.Database

func CreateSession() {
	// Setting up the mongodb server
	client, err := mongo.NewClient(options.Client().ApplyURI("mongodb://@localhost:27017"))
	if err != nil {
		log.Printf("encountered an error %v", err)
	}
	// cancel is a func that cancels the operation at the end
	ctx, cancel := context.WithTimeout(context.Background(), 20*time.Second)
	// Defer these statements
	defer cancel()
	defer client.Disconnect(ctx)
	err = client.Connect(ctx)
	if err != nil {
		log.Printf("encountered an error %v", err)
	}
	// Connecting to the database and table
	// returns a collection type
	collection = client.Database("go-micro").Collection("consignments")
}

// func CreateSession(host string) (*mgo.Session, error){
// 	Session, err = mgo.Dial(host)
// 	if err != nil{
// 		return nil, err
// 	}
// 	// if the connection is successful
// 	return Session, nil
// }
